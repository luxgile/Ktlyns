mth square(Int y) : Int {
	ret y * y;
}

mth print_char(Char* chr) : Void {
    Byte[] bytes = [5]();
    bytes[0] = 37 to Byte;
    bytes[1] = 108 to Byte;
    bytes[2] = 115 to Byte;
    bytes[3] = 10 to Byte;
    printf(&bytes[0], chr);
    ret;
}

mth add(Int a, Int b) : Int {
    ret a + b;
}   

mth add_lots(Int count, ... Int[]* args) : Int {
    Int result = 0;
    Int index = 0;
    @(0, count){
        result = result + args[index];
        index = index + 1;
    }
    ret result;
}

mth fib(Int n) : Int {
    if (n <= 1)
        ret n;
    ret fib(n - 1) + fib(n - 2);
}
